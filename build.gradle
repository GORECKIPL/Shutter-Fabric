plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
}



sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_loader + "_" +
          project.minecraft_version + "_" +
          project.mod_version + "_" +
          getDate()

group = project.maven_group

static def getDate() {
    return new Date().format('MMddyy')
}

repositories {
    maven {
        name = "Ladysnake Libs"
        url = "https://dl.bintray.com/ladysnake/libs"
    }

    jcenter()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig_version}"
    modImplementation "me.shedaniel.cloth:config-2:${project.cloth_version}"
    modImplementation("io.github.prospector:modmenu:${project.modmenu_version}") { transitive false }

    include "me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig_version}"
    include "me.shedaniel.cloth:config-2:${project.cloth_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) { exclude "fabric.mod.json" }
}

tasks.withType(JavaCompile) { options.encoding = "UTF-8" }

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar { from "LICENSE" }

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) { builtBy remapJar }
            artifact(sourcesJar) { builtBy remapSourcesJar }
        }
    }

    repositories { }
}
